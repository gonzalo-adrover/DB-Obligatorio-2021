/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package obligatorio;

import obligatorio.Entities.User;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import static obligatorio.Dashboard.user;

/**
 *
 * @author Antonio
 */
public class InternalBarter extends javax.swing.JPanel {

    Connect conn;
    Connection reg;
    Date date;

    /**
     * Creates new form Principal
     */
    public InternalBarter() throws SQLException {
        initComponents();
        conn = new Connect();
        reg = conn.getConnection();
        this.fetchStoreProducts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        desc1 = new javax.swing.JLabel();
        desc2 = new javax.swing.JLabel();
        nameTitle = new javax.swing.JLabel();
        cb_products = new javax.swing.JComboBox<>();
        jSeparator4 = new javax.swing.JSeparator();
        AmountTitle = new javax.swing.JLabel();
        sp_amount = new javax.swing.JSpinner();
        jSeparator3 = new javax.swing.JSeparator();
        btn_calculate = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        totalTitle = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        desc3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(750, 430));
        setPreferredSize(new java.awt.Dimension(750, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        body.setBackground(new java.awt.Color(255, 255, 255));
        body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setText("Calculadora de UCUCoins");
        add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        desc1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        desc1.setText("*Nota: esta calculadora solo presenta estimativos, para conseguir los UCUCoins debe asistir a un local habilitado y realizar el intercambio.");
        add(desc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        desc2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        desc2.setText("Seleccione uno de los posibles articulos que la institución puede recibir y a cambio ");
        add(desc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        nameTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameTitle.setText("Producto:");
        add(nameTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 80, -1));

        cb_products.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb_products.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_productsActionPerformed(evt);
            }
        });
        add(cb_products, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 190, -1));

        jSeparator4.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator4.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 260, 10));

        AmountTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        AmountTitle.setText("Cantidad:");
        add(AmountTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, -1, -1));

        sp_amount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        add(sp_amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 70, -1));

        jSeparator3.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator3.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, 260, 10));

        btn_calculate.setBackground(new java.awt.Color(18, 90, 173));
        btn_calculate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_calculate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_calculateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_calculateMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_calculateMousePressed(evt);
            }
        });
        btn_calculate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Calcular");
        jLabel10.setToolTipText("");
        btn_calculate.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 70, -1));

        add(btn_calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 170, 50));

        totalTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        totalTitle.setText("Total UCUCoins:");
        add(totalTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 100, -1));

        total.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 150, 20));

        jSeparator5.setForeground(new java.awt.Color(0, 153, 255));
        jSeparator5.setPreferredSize(new java.awt.Dimension(200, 10));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 260, 10));

        desc3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        desc3.setText("otorgarle UCUCoins que serán acreditadas a su cuenta.");
        add(desc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cb_productsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_productsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_productsActionPerformed

    private void btn_calculateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calculateMousePressed
        try {
            int totalUCUCoins = this.getTradableAmount();
            total.setText(String.valueOf(getTradableAmount()));
        } catch (SQLException ex) {
            Logger.getLogger(InternalBarter.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(InternalBarter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_calculateMousePressed

    private void btn_calculateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calculateMouseExited
        resetColorSaveButton(btn_calculate);
    }//GEN-LAST:event_btn_calculateMouseExited

    private void btn_calculateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calculateMouseEntered
        setColorSaveButton(btn_calculate);
    }//GEN-LAST:event_btn_calculateMouseEntered

    private String getDate() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        return (dtf.format(now));
    }

    private void fetchStoreProducts(String... productName) throws SQLException {
        ResultSet resultSet = this.executeFetchStoreProducts();
        this.cb_products.removeAllItems();

        while (resultSet.next()) {
            this.cb_products.addItem(resultSet.getString("Nombre"));
        }
    }

    private ResultSet executeFetchStoreProducts() throws SQLException {
        String SQL_QUERY_PRODUCTS = "SELECT * FROM \"ProductoAlmacen\"";

        Statement statement = reg.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        ResultSet resultSet = statement.executeQuery(SQL_QUERY_PRODUCTS);

        return resultSet;
    }

    private int fetchStoreProductPrice(int productoAlmacenId) throws SQLException, ParseException {
        String SQL_QUERY_PRODUCTSPRICE = "SELECT * FROM \"PrecioProductoAlmacen\"";

        Statement statement = reg.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        ResultSet resultSet = statement.executeQuery(SQL_QUERY_PRODUCTSPRICE);

        SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        while (resultSet.next()) {
            Date initialDateOnRow = sdformat.parse(resultSet.getString("FechaInicio"));
            Date endingDateOnRow = resultSet.getString("FechaFin") != null ? sdformat.parse(resultSet.getString("FechaFin")) : null;
            Date now = new Date();

            if (Integer.parseInt(resultSet.getString("IdProductoAlmacen")) == productoAlmacenId 
                    && initialDateOnRow.compareTo(now) < 0
                    && endingDateOnRow == null) {
                return Integer.parseInt(resultSet.getString("PrecioUCUCoin"));
            }
        }
        return -1;
    }

    public int getTradableAmount() throws SQLException, ParseException {
        int individualPrice = fetchStoreProductPrice(cb_products.getSelectedIndex()+1);
        int selectedAmount = (int) sp_amount.getValue();
        
        return individualPrice * selectedAmount;
    }

    void setColorSaveButton(JPanel panel) {
        panel.setBackground(new Color(21, 101, 192));
    }

    void resetColorSaveButton(JPanel panel) {
        panel.setBackground(new Color(18, 90, 173));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AmountTitle;
    private javax.swing.JLabel Title;
    private javax.swing.JPanel body;
    private javax.swing.JPanel btn_calculate;
    private javax.swing.JComboBox<String> cb_products;
    private javax.swing.JLabel desc1;
    private javax.swing.JLabel desc2;
    private javax.swing.JLabel desc3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel nameTitle;
    private javax.swing.JSpinner sp_amount;
    private javax.swing.JLabel total;
    private javax.swing.JLabel totalTitle;
    // End of variables declaration//GEN-END:variables
}
